#xbmcE2

import os, requests, sys
from urllib.parse import unquote as urllib_unquote, quote as urllib_quote

pythonVersion = '%s.%s' % (sys.version_info.major, sys.version_info.minor)

working_dir = "/tmp/.emukodi"
emukodi_path = "/usr/lib/python%s/site-packages/emukodi" % pythonVersion
addons_path = "/usr/lib/python%s/site-packages/emukodi/Plugins" % pythonVersion

if not os.path.exists(working_dir):
    os.system('mkdir -p %s' % working_dir)

log_file = os.path.join(working_dir, "kodi.log")

def cleanWorkingDir():
    with open("/proc/sys/vm/drop_caches", "w") as f: f.write("1\n")
    os.system('rm -f %s/*' % working_dir )

def write_log(msg, level=None, mode = 'a'):
    with open(log_file, mode) as af:
        af.write("%s\n" % msg)
        af.close()

def log(msg, level=None, mode = 'a'):
    write_log(msg, level, mode)

def writeState(xbmcScriptName, ComponentName, StatusName, text):
    wsf = os.path.join(working_dir, "%s_%s" % (xbmcScriptName, ComponentName))
    if StatusName.lower() in ('close', ) and os.path.exists(wsf):
        try: os.remove(wsf)
        except Exception: pass
    elif  StatusName.lower() in ('add', 'append', ):
        with open(wsf, 'a') as sf:
            sf.write(text)
    else:
        with open(wsf, 'w') as sf:
            sf.write(text)
    if ComponentName in ('DialogProgress', 'aqq'):
        webMessage(text)

def webMessage(msg, timeout=5):
    return #getWebPage('http://127.0.0.1/web/message?text=%s&type=1&timeout=10' % urllib_quote(msg))
    
def getWebPage(webURL, HEADERS={}):
    def decodeHTML(text):
        text = text.replace('%lf', '. ').replace('&#243;', 'ó')
        text = text.replace('&#176;', '°').replace('&lt;', '<').replace('&gt;', '>').replace('&quot;', '"').replace('&apos;', "'").replace('&#65282;', '"').replace('&#xFF02;', '"')
        text = text.replace('&#228;', 'ä').replace('&#196;', 'Ă').replace('&#246;', 'ö').replace('&#214;', 'Ö').replace('&#252;', 'ü').replace('&#220;', 'Ü').replace('&#223;', 'ß')
        return text
    try:
        if len(HEADERS) == 0:
            HEADERS = { 'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:88.0) Gecko/20100101 Firefox/88.0', 
                        'Accept-Charset': 'utf-8', 
                        'Content-Type': 'text/html; charset=utf-8'
                      }
        resp = requests.get(webURL, headers=HEADERS, timeout=10, verify=False)
        webHeader = resp.headers
        webContent = resp.content
        webContent =  urllib_unquote(webContent)
        webContent = decodeHTML(webContent)
    except Exception as e:
        write_log("EXCEPTION '%s' in downloadWebPage() for %s" % (str(e), webURL) )
        webContent = ''
    return (webHeader,webContent)
